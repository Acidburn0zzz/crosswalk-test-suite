<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="./testcase.xsl"?>
<test_definition>
  <suite name="wrt-usecase-android-tests" category="Web_Usecase_Android" launcher="xwalk">
    <set name="usecase">
      <testcase purpose="Validate if Crosswalk Browser is able to play online video, adjust sound volume and support video full-screen play" type="Functional" status="approved" component="Web Features" execution_type="manual" priority="P0" id="Crosswalk_WebApp_Video_FullScreen">
        <description>
          <pre_condition>
            1.Make sure Crosswalk packer tool is download: crosswalk/
            2.Packaged app only contain URL:"http://www.w3.org/2010/05/video/mediaevents.html"
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebApp_Video_FullScreen.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Validate the scheme 'app://', 'mailto:', 'market:', 'sms:', 'tel:', 'geo:' and 'content://' are implemented in Crosswalk" type="Functional" status="approved" component="Web Features" execution_type="manual" priority="P0" id="Crosswalk_WebApp_Schemes">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed;
            2.Make sure web_feature_scheme_tests.apk is installed;
            3.Make sure at least one Map Application is installed;
            4.Make sure there at least 1 image in the device sdcard.
            5.Make sure network can be used.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebApp_Schemes.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Validate the cookie name and value can be add and delete" type="Functional" status="approved" component="Crosswalk Cookie" execution_type="manual" priority="P0" id="Crosswalk_Cookie_Add_Remove_Cookies">
        <description>
          <pre_condition>
            1.Make sure Crosswalk application is launched;
            2.Package a web app,it contains web link: http://www.html-kit.com/tools/cookietester/;
            3.Install this web app;
            4.There are some cookies exist.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Cookie_Add_Remove_Cookies.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Validate if enable the feature of HTML5 Notification in Crosswalk" type="Functional" status="approved" component="Web Features" execution_type="manual" priority="P0" id="Crosswalk_WebApp_HTML5_Notification">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebApp_HTML5_Notification.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Validate if enable the 'Contacts' permission" type="Functional" status="approved" component="Security" execution_type="manual" priority="P0" id="Crosswalk_Permission_Field_Contacts">
        <description>
          <pre_condition>
            Make sure Crosswalk binary is installed on device.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Permission_Field_Contacts.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Validate if support accept the untrused security certificate website" type="Functional" status="approved" component="Security" execution_type="manual" priority="P0" id="Crosswalk_WebApp_Certificate_Trusted">
        <description>
          <pre_condition>
            1. Make sure Crosswalk binary is installed on device;
            2. Make sure the device connected to network.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebApp_Certificate_Trusted.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Validate the installer name is about with Crosswalk and the icon display normally" type="Functional" status="approved" component="Crosswalk Runtime Library" execution_type="manual" priority="P0" id="Crosswalk_Launcher_Check_Installer_Name">
        <description>
          <pre_condition>
            1.Make sure the Crosswalk runtime 'XwalkRuntimeLib.apk'  already exists in the Android OS
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Launcher_Check_Installer_Name_Icon.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Validate the Crosswalk enable the launch screen mechanism of png image" type="Functional" status="approved" component="Crosswalk Runtime Library" execution_type="manual" priority="P0" id="SplashScreen_LaunchScreen_Png">
        <description>
          <pre_condition>
            Make sure Crosswalk binary is installed
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/SplashScreen_LaunchScreen_Png.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Validate if the members of manifest include xwalk_hosts field can work well" type="Functional" status="approved" component="Runtime Core" execution_type="manual" priority="P0" id="Crosswalk_Manifest_members">
        <description>
          <pre_condition>
            1. Make sure Crosswalk binary is installed on device.
            2. Make sure device OS is Android 4.4 or above.
            3. Make sure device connected to network.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Manifest_members.html </test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Validate if package app successfully use minimal manifest file and the fullscreen immersive mode by swiping down from top" type="Functional" status="approved" component="Runtime Core" execution_type="manual" priority="P0" id="Crosswalk_Manifest_Minimal_Manifest">
        <description>
          <pre_condition>
            Make sure Crosswalk binary is installed on device.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Manifest_Minimal_Manifest.html </test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Validate the Manifest name of web app is number" type="Functional" status="approved" component="Runtime Core" execution_type="manual" priority="P0" id="Crosswalk_Manifest_Name_Number">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device;
          </pre_condition>
          <post_condition/>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Manifest_Name_Number.html </test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Validate Crosswalk enable multiple instances for same pages" type="Functional" status="approved" component="Runtime Core" execution_type="manual" priority="P0" id="Crosswalk_Multiple_Tab_SamePages">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device;
            2.Make sure device connected to network.
          </pre_condition>
          <post_condition/>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Multiple_Tab_SamePages.html </test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Validate the Crosswalk is able to get the version info of Packaging Tool" type="Functional" status="approved" component="Crosswalk Packer Tool" execution_type="manual" priority="P0" id="Crosswalk_Packer_Tool_Version">
        <description>
          <pre_condition>
            1.Make sure packer tool download;
            2.Make sure got the Crosswalk Packaging Tool.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_Version.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Validate the Crosswalk support share mode of package app" type="Functional" status="approved" component="Crosswalk Packer Tool" execution_type="manual" priority="P0" id="Crosswalk_ShareMode_PackageApp">
        <description>
          <pre_condition>
            1.Make sure Crosswalk lib installed.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_ShareMode_PackageApp.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Validate if the Packaging Tool enable the help option" type="Functional" status="approved" component="Crosswalk Packer Tool" execution_type="manual" priority="P0" id="Crosswalk_Packer_Tool_Help">
        <description>
          <pre_condition>
            1.Make sure packer tool download;
            2.Make sure got the Crosswalk Packaging Tool.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_Help.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Validate if the Packaging Tool enable the xpk option" type="Functional" status="approved" component="Crosswalk Packer Tool" execution_type="manual" priority="P0" id="Crosswalk_Packer_Tool_XPK">
        <description>
          <pre_condition>
            1.Make sure packer tool download;
            2.Make sure got the Crosswalk Packaging Tool;
            3.Make sure Crosswalk is installed.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_XPK.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Validate if the Packaging Tool enable the 'png' icon option" type="Functional" status="approved" component="Crosswalk Packer Tool" execution_type="manual" priority="P0" id="Crosswalk_Packer_Tool_Icon_Png">
        <description>
          <pre_condition>
            1.Make sure packer tool download;
            2.Make sure got the Crosswalk Packaging Tool;
            3.Make sure Crosswalk is installed.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_Icon_Png.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Validate if the Packaging Tool enable two icon options" type="Functional" status="approved" component="Crosswalk Packer Tool" execution_type="manual" priority="P0" id="Crosswalk_Packer_Tool_Icon_TwoPic">
        <description>
          <pre_condition>
            1.Make sure packer tool download;
            2.Make sure got the Crosswalk Packaging Tool;
            3.Make sure Crosswalk is installed.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_Icon_TwoPic.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Validate if the Packaging Tool enable works well with the 'app-version', 'app-local-path', 'name', 'package', 'description', 'fullscreen', default 'icon', 'mode=embedded', 'orientation=landscape', 'target-dir' and default 'arch' options can package app on Windows host with absolute path" type="Functional" status="approved" component="Crosswalk Packer Tool" execution_type="manual" priority="P0" id="Crosswalk_Packer_Tool_options">
        <description>
          <pre_condition>
            1.Make sure enable Python2.7 on Windows host;
            2.Make sure the Crosswalk Packaging Tool on Windows;
            3.Make sure Crosswalk is installed.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_options.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Validate Crosswalk could debug by remote host when the web app is packaged with remote debugging by default" type="Functional" status="approved" component="Crosswalk Packer Tool" execution_type="manual" priority="P0" id="Crosswalk_Remote_Debugging_Default">
        <description>
          <pre_condition>
            Make sure Crosswalk is installed
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Remote_Debugging_Default.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Validate if the Packaging Tool manify js/css files with compressor option and Manifest can package app on Windows host" type="Functional" status="approved" component="Crosswalk Packer Tool" execution_type="manual" priority="P0" id="Crosswalk_Packer_Tool_Compressor_Minify">
        <description>
          <pre_condition>
            1.Make sure enable Python2.7 on Windows host;
            2.Make sure the Crosswalk Packaging Tool on Windows;
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_Compressor_Minify.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Validate if the Packaging Tool manify css files with compressor option" type="Functional" status="approved" component="Crosswalk Packer Tool" execution_type="manual" priority="P0" id="Crosswalk_Packer_Tool_Compressor_MinifyCss">
        <description>
          <pre_condition>
            1.Make sure packer tool download;
            2.Make sure got the Crosswalk Packaging Tool.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_Compressor_MinifyCss.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Validate if the Packaging Tool works well with the 'x86' arch, 'app-url', 'mode=shared', 'verbose' and 'keep-screen-on' options can package app with url on Windows host" type="Functional" status="approved" component="Crosswalk Packer Tool" execution_type="manual" priority="P0" id="Crosswalk_Packer_Tool_AppVersion_X86">
        <description>
          <pre_condition>
            1.Make sure enable Python2.7 on Windows host;
            2.Make sure the Crosswalk Packaging Tool on Windows;
            3.Make sure Crosswalk is installed.
            4.Make sure connected to the network.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_AppVersion_X86.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Validate if Crosswalk enable update webapp with the different app-version" type="Functional" status="approved" component="Crosswalk Packer Tool" execution_type="manual" priority="P0" id="Crosswalk_Packer_Tool_AppVersion_DiffUpdate">
        <description>
          <pre_condition>
            1.Make sure packer tool download;
            2.Make sure got the Crosswalk Packaging Tool;
            3.Make sure Crosswalk is installed.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_AppVersion_DiffUpdate.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Validate if Crosswalk support disable the WebGL API" type="Functional" status="approved" component="Crosswalk Packer Tool" execution_type="manual" priority="P0" id="Crosswalk_WebGL_API_Disable">
        <description>
          <pre_condition>
            Make sure Crosswalk is installed.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebGL_API_Disable.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Validate if Crosswalk support web apps could be installed and uninstalled successfully" type="Functional" status="approved" component="Package Management on Android" execution_type="manual" priority="P0" id="Crosswalk_WebApp_Install_Uninstall">
        <description>
          <pre_condition>
            1.Make sure Crosswalk application is launched
            2.Make sure there some webapps are available
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebApp_Install_Uninstall.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Validate Crosswalk support that web app could be launched and closed successfully" type="Functional" status="approved" component="Package Management on Android" execution_type="manual" priority="P0" id="Crosswalk_WebApp_Launch_Close">
        <description>
          <pre_condition>
            1.Make sure Crosswalk application is launched
            2.Make sure there some webapps are available
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebApp_Launch_Close.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Validate if enable open a docx file with third part app" type="Functional" status="approved" component="Package Management on Android" execution_type="manual" priority="P0" id="Crosswalk_WebApp_docx_openfile">
        <description>
          <pre_condition>
            1.Make sure Crosswalk application is launched.
            2.Make sure tool which support the format of file is installed on the test platform.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebApp_docx_openfile.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Validate Crosswalk suppor lock and unlock screen when running Web Apps" type="Functional" status="approved" component="Integration with Android System" execution_type="manual" priority="P0" id="Crosswalk_Lock_And_Unlock_Screen">
        <description>
          <pre_condition>
            1.Make sure Crosswalk application is launched;
            2.Make sure there some webapps are available.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Lock_And_Unlock_Screen.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Validate if  Web App could be termined in task manager" type="Functional" status="approved" component="Integration with Android System" execution_type="manual" priority="P0" id="Crosswalk_WebApp_Integration_Termined_TaskManager">
        <description>
          <pre_condition>
            1. Make sure Crosswalk is installed
            2. Make sure there some webapps are available
          </pre_condition>
           <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebApp_Integration_Termined_TaskManager.html </test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Validate if the HW Key work well in Crosswalk App" type="Functional" status="approved" component="Integration with Android System" execution_type="manual" priority="P0" id="Crosswalk_WebApp_HW_KEY">
        <description>
          <pre_condition>
            1. Make sure Crosswalk is installed
            2. Make sure has some multimedia Web Apps
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebApp_HW_KEY.html </test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Validate if Crosswalk support click, scroll and swipe gesture on Web Apps" type="Functional" status="approved" component="Integration with Android System" execution_type="manual" priority="P0" id="Crosswalk_WebApp_Touch_Gesture">
        <description>
          <pre_condition>
            1. Make sure Crosswalk application is launched and the device connected to network
            2. Package a Web App,it contains below web links:Open website link: http://www.hao123.com
            3. Install this Web App
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebApp_Touch_Gesture.html </test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Validate if could copy Selected Copy and cut" type="Functional" status="approved" component="Integration with Android System" execution_type="manual" priority="P0" id="Crosswalk_CopyAndPaste_Selected_Copy_Cut">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed;
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_CopyAndPaste_Selected_Copy_Cut.html </test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Validate the Crosswalk enable to extend 'READ_CONTACTS', 'WRITE_CONTACTS' permisson on Android" type="Functional" status="approved" component="Extension System" execution_type="manual" priority="P0" id="Crosswalk_Extension_Permissions_Contacts_Write">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed;
            2.Make sure package the "extension_permission_contacts_tests.apk" with argument: "--extensions={EXTENSION}";
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Extension_Permissions_Contacts_Write.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Validate the Crosswalk enable to extend 'READ_CONTACTS', 'WRITE_CONTACTS' permisson on Android" type="Functional" status="approved" component="Extension System" execution_type="manual" priority="P0" id="Crosswalk_Extension_Permissions_Contacts_Read">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed;
            2.Make sure package the "extension_permission_contacts_tests.apk" with argument: "--extensions={EXTENSION}";
            3.Extension permission contacts web app has installed;
            4.Have available contacts;
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Extension_Permissions_Contacts_Read.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Validate if Crosswalk support the external extension install in the embedded mode" type="Functional" status="approved" component="Extension System" execution_type="manual" priority="P0" id="Crosswalk_EmbeddedMode_Extension_Install">
        <description>
          <pre_condition>
            1.Make sure Crosswalk application is launched and the device connected to network;
            2.Make sure the extension are available
 and  package the extension with argument like: python make_apk.py --name=Example --package=org.xwalk.example --app-root=test_data/entry --app-local-path=contactextension.html --extensions=test_data//extensions/contactextension/ --mode=embedded
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_EmbeddedMode_Extension_Install.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Validate if Crosswalk support the external extension uninstall in the embedded mode" type="Functional" status="approved" component="Extension System" execution_type="manual" priority="P0" id="Crosswalk_EmbeddedMode_Extension_Uninstall">
        <description>
          <pre_condition>
            1.Make sure Crosswalk application is launched and the device connected to network;
            2.Make sure the extension are installed.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_EmbeddedMode_Extension_Uninstall.html</test_script_entry>
        </description>
      </testcase>
    </set>
  </suite>
</test_definition>
